{
  "swagger": "2.0",
  "info": {
    "description": "PCI API",
    "version": "1.0.0",
    "title": "PCI API"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "basePath": "/api",
  "paths": {
    "/users": {
      "get": {
        "operationId": "user.list",
        "summary": "Returns list of users",
        "responses": {
          "200": {
            "description": "Successful read user list",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      },
      "post": {
        "operationId": "user.post",
        "summary": "Create user",
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful create user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/{userid}": {
      "get": {
        "operationId": "user.get",
        "summary": "Returns user by id",
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "The ID of the user to return."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful read user info",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "operationId": "user.put",
        "summary": "Update user",
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "The ID of the user to update."
          },
          {
            "in": "body",
            "name": "user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful updated user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "delete": {
        "operationId": "user.delete",
        "summary": "Delete user",
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "The ID of the user to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful deleted user"
          }
        }
      }
    },
    "/users/{userid}/notifications": {
      "get": {
        "operationId": "user.get_notifications",
        "summary": "Returns notifications for user",
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "The ID of the user to return."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful read user info",
            "schema": {
              "$ref": "#/definitions/Notifications"
            }
          }
        }
      }
    },
    "/users/{userid}/notifications/{notifid}": {
      "get": {
        "operationId": "user.get_notification",
        "summary": "Returns notifications for user",
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "The ID of the user to return."
          },
          {
            "in": "path",
            "name": "notifid",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "The ID of the notification to return."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful read user info",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        }
      }
    },
    "/users/{userid}/test": {
      "get": {
        "operationId": "user.test_list",
        "summary": "Returns list of test results",
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "The ID of the user."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful read notification list",
            "schema": {
              "$ref": "#/definitions/Tests"
            }
          }
        }
      },
      "post": {
        "operationId": "user.test_post",
        "summary": "Add test",
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "The ID of the user."
          },
          {
            "in": "body",
            "name": "record",
            "schema": {
              "$ref": "#/definitions/Test"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Add test",
            "schema": {
              "$ref": "#/definitions/Test"
            }
          }
        }
      }
    },
    "/users/{userid}/test/current": {
      "get": {
        "operationId": "user.test_get_current",
        "summary": "Get latest test",
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "The ID of the user."
          }
        ],
        "responses": {
          "201": {
            "description": "Get specific test",
            "schema": {
              "$ref": "#/definitions/Test"
            }
          }
        }
      }
    },
    "/users/{userid}/test/{testid}": {
      "get": {
        "operationId": "user.test_get",
        "summary": "Get test",
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "The ID of the user."
          },
          {
            "in": "path",
            "name": "testid",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "Test ID."
          }
        ],
        "responses": {
          "201": {
            "description": "Get specific test",
            "schema": {
              "$ref": "#/definitions/Test"
            }
          }
        }
      }
    },
    "/notifications": {
      "get": {
        "operationId": "notification.list",
        "summary": "Returns list of notifications",
        "responses": {
          "200": {
            "description": "Successful read notification list",
            "schema": {
              "$ref": "#/definitions/Notifications"
            }
          }
        }
      },
      "post": {
        "operationId": "notification.post",
        "summary": "Create notification",
        "parameters": [
          {
            "in": "body",
            "name": "record",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful create notification",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        }
      }
    },
    "/console/businesses": {
      "get": {
        "operationId": "console.list_businesses",
        "summary": "Returns list of businesses",
        "responses": {
          "200": {
            "description": "Successful read business list",
            "schema": {
              "$ref": "#/definitions/Businesses"
            }
          }
        }
      },
      "post": {
        "operationId": "console.business_post",
        "summary": "Sdd/Register business",
        "parameters": [
          {
            "in": "body",
            "name": "bisinesses",
            "schema": {
              "$ref": "#/definitions/Business"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful add business",
            "schema": {
              "$ref": "#/definitions/Business"
            }
          }
        }
      }
    },
    "/console/businesses/{businessid}": {
      "get": {
        "operationId": "console.business_get",
        "summary": "Returns business by id",
        "parameters": [
          {
            "in": "path",
            "name": "businessid",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "The ID of the business to return."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful read business info",
            "schema": {
              "$ref": "#/definitions/Business"
            }
          }
        }
      },
      "put": {
        "operationId": "console.business_put",
        "summary": "Update business",
        "parameters": [
          {
            "in": "path",
            "name": "businessid",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "The ID of the business to update."
          },
          {
            "in": "body",
            "name": "business",
            "schema": {
              "$ref": "#/definitions/Business"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful updated business",
            "schema": {
              "$ref": "#/definitions/Business"
            }
          }
        }
      },
      "delete": {
        "operationId": "console.business_delete",
        "summary": "Delete business",
        "parameters": [
          {
            "in": "path",
            "name": "businessid",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "The ID of the business to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful deleted business"
          }
        }
      }
    },
    "/business/profile": {
      "get": {
        "operationId": "business.profile_get",
        "summary": "Returns profile",
        "responses": {
          "200": {
            "description": "Successfully read business profile",
            "schema": {
              "$ref": "#/definitions/Business"
            }
          }
        }
      },
      "put": {
        "operationId": "business.profile_put",
        "summary": "Update business profile",
        "parameters": [
          {
            "in": "body",
            "name": "business",
            "schema": {
              "$ref": "#/definitions/Business"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful updated business",
            "schema": {
              "$ref": "#/definitions/Business"
            }
          }
        }
      }
    },
    "/business/users": {
      "get": {
        "operationId": "business.user_list",
        "summary": "Returns list of users",
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3
            ],
            "default": 0,
            "description": "0 - all, 1 - activated, 2 - pending activation, 3 - removed"
          },
          {
            "in": "query",
            "name": "firstname",
            "type": "string",
            "required": false,
            "default": null
          },
          {
            "in": "query",
            "name": "lastname",
            "type": "string",
            "required": false,
            "default": null
          }
        ],
        "responses": {
          "200": {
            "description": "Successful read user list",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      },
      "post": {
        "operationId": "business.create_user",
        "summary": "Create user - user not in DB and HR needs a way to create new user",
        "parameters": [
          {
            "in": "body",
            "name": "userinfo",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful create user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/business/users/{userid}": {
      "get": {
        "operationId": "business.get_user",
        "summary": "Returns user by id",
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "The ID of the user to return."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful read user info",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "delete": {
        "operationId": "business.delete_user",
        "summary": "Unregister from company",
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "The ID of the user to return."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful read user info",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/business/users/{userid}/invite": {
      "post": {
        "operationId": "business.invite_user",
        "summary": "Invite user by id",
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "User ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful send invitation"
          }
        }
      }
    },
    "/business/users/{userid}/suspend": {
      "post": {
        "operationId": "business.suspend_user",
        "summary": "Suspend user - do not require test but still employee",
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "User ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful send invitation"
          }
        }
      }
    },
    "/business/notifications": {
      "get": {
        "operationId": "business.notification_list",
        "summary": "Returns list of notifications",
        "parameters": [
          {
            "in": "query",
            "name": "fromdate",
            "type": "string",
            "required": false,
            "default": null,
            "description": "Start Date"
          },
          {
            "in": "query",
            "name": "todate",
            "type": "string",
            "required": false,
            "default": null,
            "description": "end Date"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful read user info",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        }
      },
      "post": {
        "operationId": "business.notification_post",
        "summary": "Create notification for company users",
        "parameters": [
          {
            "in": "body",
            "name": "record",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful create notification",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        }
      }
    },
    "/business/notifications/{notifid}": {
      "get": {
        "operationId": "business.notification_get",
        "summary": "Returns notification",
        "parameters": [
          {
            "in": "path",
            "name": "notifid",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "The ID of the notification to return."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful notification",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "dob": {
          "type": "string",
          "example": "2019-03-13"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/User"
      }
    },
    "Test": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "text": {
          "type": "string"
        },
        "postdate": {
          "type": "string",
          "example": "2019-03-13"
        }
      }
    },
    "Tests": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Test"
      }
    },
    "Notification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "text": {
          "type": "string"
        },
        "postdate": {
          "type": "string",
          "example": "2019-03-13"
        }
      }
    },
    "Notifications": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Notification"
      }
    },
    "Business": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Businesses": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Business"
      }
    }
  }
}